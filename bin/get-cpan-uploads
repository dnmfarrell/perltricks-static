#!/usr/bin/env perl
use 5.16.3;
use warnings;
use Time::Piece;
use Time::Seconds;
use CPAN::Recent::Uploads;
use MetaCPAN::Client;
use Getopt::Long 'GetOptions';

GetOptions(
  'start=s' => \my $start,
  'end=s'   => \my $end,
  'debug'   => \my $debug,
) or die "error parsing options $@\n";

print_usage() unless 2 == grep { $_ && /^\d\d\d\d-\d\d-\d\d$/ }
  $start, $end;

my $start_date = Time::Piece->new->strptime($start, '%Y-%m-%d');
my $end_date   = Time::Piece->strptime($end,'%Y-%m-%d');
my $mcpan      = MetaCPAN::Client->new( version => 'v1' );

my (@upload, @distnamefail, @fetchfail, @outofdate, @notnew, @dupe, @include);
@upload = CPAN::Recent::Uploads->recent($start_date->epoch);

foreach (@upload) {
  my @parts = split /\//;
  my $release_name = $parts[3] =~ s/(?:\.tar\.gz|\.tgz)$//r;
  print STDERR "Checking $release_name\n" if $debug;

  if ($release_name =~ /^(\w.+?)-v?[0-9._]+/) {
    my $dist_name = $1;
    if (!grep /$dist_name/, @include) {
      say STDERR "Fetching latest release of $dist_name" if $debug;
      my $release = eval { $mcpan->release($dist_name) };

      if ($release) {
        say STDERR $release->distribution if $debug;

        my $upload_date = Time::Piece->strptime($release->date, '%Y-%m-%dT%H:%M:%S');
        say STDERR $upload_date if $upload_date && $debug;

        unless ($upload_date <= $end_date) {
          push @outofdate, $dist_name;
          next;
        }

        unless ($release->first) {
          push @notnew, $dist_name;
          next;
        }

        push @include, $dist_name;

        my $line = (($release->distribution || '')
            . '|' . ($release->version || '')
            . '|' . ($release->abstract || '')
            . '|' . ($release->date || '')
            . '|' . ($release->status || '')
            . '|' . ($release->metadata->{author}[0] || '')
        );
        say $line =~ s/\n|\r//gr;
      }
      else {
        push @fetchfail, $dist_name;
        say STDERR "Failed to get $dist_name: " . ($@||'unknown error') if $debug;
      }
    }
    else {
      push @dupe, $dist_name;
    }
  }
  else {
    push @distnamefail, $release_name;
  }
}

printf STDERR "uploads: %d, regex fail: %d, fetch fail: %d, out of date: %d, not new: %d, dupes: %d, included: %d\n",
  scalar @upload, scalar @distnamefail, scalar @fetchfail, scalar @outofdate, scalar @notnew, scalar @dupe, scalar @include;

sub print_usage {
  say "\nget-cpan-uploads --start YYYY-MM-DD --end YYYY-MM-DD\n";
  exit 0;
}
